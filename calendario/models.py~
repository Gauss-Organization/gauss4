# -*- coding: utf-8 -*-
from django.db import models
from autenticar.models import Gauser, Gauser_extra, Perfil

TIPOS = (
	('EVT_PER','Evento personal/privado'),
	('EVT_FES','Día festivo'),
	('EVT_REU','Reunión/Comité/Consejo/...'),
	('EVT_EVA','Acampada/Excursión'),
       )

class Acontecimiento(models.Model):
    gauser_extra = models.ForeignKey(Gauser_extra)
    nombre = models.CharField("Evento", max_length=250)
    inicio = models.DateTimeField("Fecha y hora de inicio del evento")
    fin = models.DateTimeField("Fecha y hora de finalización del evento")
    lugar = models.CharField("Dónde se produce el evento", max_length=275, null=True, blank=True)
    tipo = models.CharField("Tipo de evento:", max_length=30, choices=TIPOS, default='EVT_PER')
    describir = models.TextField("Descripción del evento", blank=True)
    perfiles = models.ManyToManyField(Perfil, null=True, blank=True)
    def __unicode__(self):
      return u'Evento de: %s (%s)' % (self.gauser_extra.gauser.get_full_name(),self.inicio)

class Gauser_invitado_acontecimiento(models.Model):
    acontecimiento = models.ForeignKey(Acontecimiento, related_name="invitados")
    gauser = models.ForeignKey(Gauser, null=True, blank=True)
    recordar = models.DateTimeField("Fecha y hora en la que se mandará el recordatorio", null=True, blank=True)
    enterado = models.BooleanField("Ha recibido el aviso del evento")
    importante = models.BooleanField("Acontecimiento considerado importante")
    def __unicode__(self):
      return u'Invitación de %s para %s (%s)' % (self.acontecimiento.gauser_extra.gauser.get_full_name(), self.gauser.get_full_name(),self.acontecimiento.inicio)
