# -*- coding: utf-8 -*-
from django.shortcuts import render_to_response
from django.template import RequestContext
from functools import wraps
from entidades.models import Alta_Baja
from autenticar.models import Gauser_extra
from django.db.models import Q
import string
import random


#Generador de contraseñas
def pass_generator(size=6, chars=string.ascii_lowercase + string.digits):
  return ''.join(random.choice(chars) for x in range(size))
  

#Obtención de los socios del grupo que no están de baja:
def socios_del_grupo(entidad, perfiles = False):
  bajas = Alta_Baja.objects.filter( entidad = entidad, fecha_baja__isnull = False ).values_list('gauser__id',flat=True)
  if perfiles:
    scouts = Gauser_extra.objects.filter( Q(entidad = entidad) & Q(ronda = entidad.ronda) & ~Q(gauser__id__in = bajas) & Q(perfiles__in = perfiles) & ~Q(gauser__username = 'gauss') ).order_by('gauser__last_name','gauser__first_name')
  else:
    scouts = Gauser_extra.objects.filter( Q(entidad = entidad) & Q(ronda = entidad.ronda) & ~Q(gauser__id__in = bajas) & ~Q(gauser__username = 'gauss') ).order_by('gauser__last_name','gauser__first_name')
  return scouts


#Devuelve las iniciales del nombre seguidas del primer apellido o el alias del usuario
def nombre_usuario(g_e, alias=False):
  #En primer lugar quitamos tildes, colocamos nombres en minúsculas y :
  def nombre(g_e):
    nombre = g_e.gauser.first_name.split()
    apellidos = g_e.gauser.last_name.split()
    iniciales_nombre = ''
    for parte in nombre:
      iniciales_nombre = iniciales_nombre + parte[0]
    iniciales_apellidos = apellidos[0]
    return u'%s %s'%(iniciales_nombre,iniciales_apellidos)
  
  if alias:
    return g_e.alias if g_e.alias else nombre(g_e)
  else:
    return nombre(g_e)